
@article{harutyunyan_industry_2019,
	title = {Industry requirements for {FLOSS} governance tools to facilitate the use of open source software in commercial products},
	volume = {158},
	issn = {01641212},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0164121219301578},
	doi = {10.1016/j.jss.2019.08.001},
	language = {en},
	urldate = {2020-05-24},
	journal = {Journal of Systems and Software},
	author = {Harutyunyan, Nikolay and Bauer, Andreas and Riehle, Dirk},
	month = dec,
	year = {2019},
	pages = {110390}
}

@inproceedings{harutyunyan_getting_2019,
	address = {Skövde, Sweden},
	series = {{OpenSym} '19},
	title = {Getting started with open source governance and compliance in companies},
	isbn = {9781450363198},
	url = {https://doi.org/10.1145/3306446.3340815},
	doi = {10.1145/3306446.3340815},
	abstract = {Commercial use of open source software is on the rise as more companies realize the benefits of using FLOSS components in their products. At the same time, the ungoverned use of such components can result in legal, financial, intellectual property, and other risks. To mitigate these risks, companies must govern their use of open source through appropriate processes. This paper presents an initial theory of industry best practices on getting started with open source governance and compliance. Through a qualitative survey, we conducted and analyzed 15 expert interviews in companies with advanced capabilities in open source governance. We also studied practitioner reports on existing practices for introducing FLOSS governance processes. We cast our resulting initial theory in the actionable format of best practice patterns that, when combined, form a practical handbook of getting started with FLOSS governance in companies.},
	urldate = {2020-05-24},
	booktitle = {Proceedings of the 15th {International} {Symposium} on {Open} {Collaboration}},
	publisher = {Association for Computing Machinery},
	author = {Harutyunyan, Nikolay and Riehle, Dirk},
	month = aug,
	year = {2019},
	keywords = {FLOSS, FOSS, commercial use of open source, industry best practice, introduction of FLOSS in companies, open source governance, open source software, qualitative survey},
	pages = {1--10}
}

@inproceedings{schwab_ecosystem_2020,
	address = {Cham},
	series = {{IFIP} {Advances} in {Information} and {Communication} {Technology}},
	title = {The {Ecosystem} of {openKONSEQUENZ}, {A} {User}-{Led} {Open} {Source} {Foundation}},
	isbn = {9783030472405},
	doi = {10.1007/978-3-030-47240-5_1},
	abstract = {Companies without expertise in software development can opt to form consortia to develop open source software to meet their needs, as an alternative to the build-or-buy decision. Such user-led foundations are little understood, due to a limited number of published examples. In particular, almost nothing is known about the ecosystems surrounding user-led foundations. Our work seeks to address this gap, through an exploratory qualitative survey of openKONSEQUENZ, from the German energy sector. We find that the technological goals are quite homogeneous, independent of a participant’s role in the ecosystem, but that economic conflicts exist between foundation members and supplier companies due to the consortium’s efforts to transform the software market structure to limit dependency on specific vendors.},
	language = {en},
	booktitle = {Open {Source} {Systems}},
	publisher = {Springer International Publishing},
	author = {Schwab, Bettina and Riehle, Dirk and Barcomb, Ann and Harutyunyan, Nikolay},
	editor = {Ivanov, Vladimir and Kruglov, Artem and Masyagin, Sergey and Sillitti, Alberto and Succi, Giancarlo},
	year = {2020},
	keywords = {Commercial open source , Open source foundations , Open source software , Sponsored open source , User-led open source foundations },
	pages = {1--13}
}

@inproceedings{bauer_challenges_2020,
	address = {Cham},
	series = {{IFIP} {Advances} in {Information} and {Communication} {Technology}},
	title = {Challenges of {Tracking} and {Documenting} {Open} {Source} {Dependencies} in {Products}: {A} {Case} {Study}},
	isbn = {9783030472405},
	shorttitle = {Challenges of {Tracking} and {Documenting} {Open} {Source} {Dependencies} in {Products}},
	doi = {10.1007/978-3-030-47240-5_3},
	abstract = {Software vendors need to manage the dependencies of the open source components used in their products. Without this management, license compliance would be impossible, export restrictions could not be maintained, and security vulnerabilities would remain unknown to the vendor.The management of these dependencies has grown in an ad-hoc fashion in most companies. As such, vendors find it hard to learn from each other and improve practices.To address this problem, we performed exploratory single-case study research at one large established software vendor. We gathered and analyzed the key challenges of tracking and documenting open source dependencies in products. We wanted to understand whether these ad-hoc solutions could be based on a single unified conceptual model for managing dependencies.Our study suggests that underlying the various point solutions that we found at this vendor lies a conceptual model that we tentatively call the product (architecture) model. In future cross-vendor work, we will investigate whether this conceptual model can be expanded to become a unifying model for all open source dependency management.},
	language = {en},
	booktitle = {Open {Source} {Systems}},
	publisher = {Springer International Publishing},
	author = {Bauer, Andreas and Harutyunyan, Nikolay and Riehle, Dirk and Schwarz, Georg-Daniel},
	editor = {Ivanov, Vladimir and Kruglov, Artem and Masyagin, Sergey and Sillitti, Alberto and Succi, Giancarlo},
	year = {2020},
	keywords = {FLOSS , FOSS , Open source governance , Open source software },
	pages = {25--35}
}

@inproceedings{harutyunyan_industry_2020,
	title = {Industry {Best} {Practices} for {Corporate} {Open} {Sourcing}},
	copyright = {Attribution-NonCommercial-NoDerivatives 4.0 International},
	isbn = {9780998133133},
	url = {http://scholarspace.manoa.hawaii.edu/handle/10125/64458},
	doi = {10.24251/HICSS.2020.716},
	abstract = {Companies usually don’t share the source code for the software they develop. While this approach is justified in software that constitutes differentiating intellectual property, proprietary development can lead to redundant development and other opportunity costs. In response, companies are increasingly open sourcing some if not all of their non-differentiating software. Given the limited academic research on this emerging topic, we bridge the gap between industry and academia by taking a practice-based approach. We investigate why and how companies engage in corporate open sourcing. We take an exploratory case study approach. Our cases are four companies with multibillion-dollar revenues each: A major e-commerce company based in Germany; a leading social networking service company based in the USA; a cloud computing software company based in the USA; and a manufacturing and media software company based in the USA. We present the resulting theory in an actionable format of state-of-the-art best practice patterns.},
	language = {eng},
	urldate = {2020-05-24},
	author = {Harutyunyan, Nikolay and Riehle, Dirk and Sathya, Gayathery},
	month = jan,
	year = {2020}
}

@inproceedings{harutyunyan_industry_2019-1,
	address = {Irsee, Germany},
	series = {{EuroPLop} '19},
	title = {Industry Best Practices for Open Source Governance and Component Reuse},
	isbn = {9781450362061},
	url = {https://doi.org/10.1145/3361149.3361170},
	doi = {10.1145/3361149.3361170},
	abstract = {Corporate use of open source in software products is on the rise. While this brings a number of technological and business benefits to companies, it also comes with potential legal and financial risks caused by license non-compliance and ungoverned use of open source components. Companies address these threats with free/libre and open source software (FLOSS) governance - internal guidelines and processes for using open source components in products. An essential aspect of FLOSS governance is component reuse and component repository, which enable efficient governance for the previously used components by the company's developers. In our study, we aimed to identify the current industry best practices for FLOSS governance and component reuse. We conducted 15 expert interviews in companies with high governance maturity, analyzed these interviews and derived 19 best practices cast in the pattern format of context-problem-solution. The format was inspired by design patterns and enables higher applicability of our research results by practitioners. The 19 best practices form a handbook on FLOSS governance and component reuse that also includes workflows connecting the individual practices into process templates.},
	urldate = {2020-05-24},
	booktitle = {Proceedings of the 24th {European} {Conference} on {Pattern} {Languages} of {Programs}},
	publisher = {Association for Computing Machinery},
	author = {Harutyunyan, Nikolay and Riehle, Dirk},
	month = jul,
	year = {2019},
	keywords = {FLOSS, best practice, commercial use of open source, component repository, component reuse, introduction of FLOSS in companies, open source components, open source governance, open source software, pattern, pattern language},
	pages = {1--14}
}

@inproceedings{harutyunyan_user_2019,
	title = {User {Experience} {Design} in {Software} {Product} {Lines}},
	copyright = {Attribution-NonCommercial-NoDerivatives 4.0 International},
	isbn = {9780998133126},
	url = {http://scholarspace.manoa.hawaii.edu/handle/10125/60187},
	doi = {10.24251/HICSS.2019.903},
	abstract = {User experience design is an important part of software product development, and yet software product line engineering has largely ignored this topic. This paper presents a set of industry best practices for user experience design in software product lines. We conducted multiple-case case study research using two different product lines within the multinational company Siemens AG: in a healthcare software division and in an industrial automation software division. We performed a preliminary exploratory study that will serve as a baseline for future research in the design, implementation, and management of user experience design in the context of software product lines. Practitioners can use our findings and the resulting best practices to improve their user experience design, particularly within healthcare and industrial automation software product lines.},
	language = {eng},
	urldate = {2020-05-24},
	author = {Harutyunyan, Nikolay and Riehle, Dirk},
	month = jan,
	year = {2019}
}

@article{harutyunyan_corporate_nodate,
	title = {Corporate {Open} {Source} {Governance} of {Software} {Supply} {Chains}},
	copyright = {http://www.gesetze-im-internet.de/urhg/index.html},
	url = {https://opus4.kobv.de/opus4-fau/frontdoor/index/index/docId/12272},
	abstract = {Today most software products incorporate free/libre and open source software (FLOSS) components. FLOSS components are used in development infrastructures, generic and non-differentiating features and functionalities, web browsers, databases, and operating systems. Some software products are built on top of FLOSS frameworks. Open source software usage often ensures lower cost, higher quality, and quick availability, especially when using generic software components and libraries.

Using open source software in products comes with legal, business, and technical risks, however. A major challenge for companies is understanding and complying with licenses and regulations related to the FLOSS components they use in their products. On a deeper level, these issues go beyond the in-house software development, including complete software supply chains and FLOSS components used within them. The potential risks of using open source components can result in litigation due to open source license non-compliance, copyright infringement, or loss of intellectual property. There are several ongoing court cases in Germany, in China, and in the USA, which highlight the significance of the above-mentioned risks.

Companies can address the risks of FLOSS use by establishing corporate open source governance – a set of processes, best practices, and tools employed by companies to govern the use of FLOSS components as parts of their commercial products while minimizing their risks and maximizing their benefit from such use. Corporate open source governance covers topics of open source component selection and approval, ensuring open source license compliance through code scans and audits, as well as bill of materials management focused on open source component and their metadata, etc.

The goal of our research project was to build a methodological framework for corporate open source governance in companies with software-intensive products. In the scope of this dissertation, we researched the state of the art regarding the corporate open source governance in the literature, built a theory of industry best practices for corporate open source governance based on expert interviews and other primary materials, and evaluated the proposed theory through a multiple-case case study at German companies operating internationally.

In the first stage, we studied the state of the art in academic research through a literature review of 87 publications on the topic. We conducted a qualitative data analysis of the papers, deriving the core concepts of corporate open source governance from the literature – risks of the ungoverned FLOSS use, getting started with FLOSS governance, inbound governance, supply chain management, outbound governance, and general governance. We then mapped the reviewed papers to the identified core concepts and presented highlights on each concept, which were later compared with the insights from the proposed theory.

In the second stage, we asked the overarching research question of how companies using open source components in their products should govern this use based on the industry best practices. Taking a practice-based approach, we conducted a qualitative survey that included 20 primary materials (published governance guidelines, white papers, slides) and 21 expert interviews at 15 companies with an advanced understanding of open source governance. Based on the findings from the qualitative survey, we built a theory of industry best practices for corporate open source governance, with a particular focus on supply chain management. Our theory proposes industry best practices on the core topics of FLOSS governance in companies – getting started with corporate open source governance, inbound governance, outbound governance, general governance, and the focal topic of the study – supply chain management in the context of open source governance. Going beyond the textual presentation of the theory, we also presented our findings in an actionable and industry-friendly format of interconnected best practice patterns that formed a handbook for corporate open source governance. We attached excerpts from our governance handbook in the appendix of this dissertation.

In the third stage, we evaluated the proposed theory through a multiple-case case study with a holistic design at two case studies in production-level projects at two large German companies that used open source software in their products, but lacked open source governance. Case Study A was a 2.5-year longitudinal study into a company that was just getting started with open source governance. This enabled us to evaluate the getting started and inbound governance aspects of our theory. The length of the study enabled us to thoroughly analyze the current use of open source software and its informal governance in the various divisions of the company, followed by the guided implementation of the industry best practices from our theory. We then observed how the best practices were applied in a real-life production environment. Case Study B was a one-year longitudinal study into a company that already has the fundamental framework for open source governance, but lacks processes and practices for governing the use of open source software from its supply chain. Using the initial situation assessment as a baseline, we implemented the industry best practices on supply chain management from our theory. We then observed the effectiveness of the proposed practices in improving FLOSS governance and the drawbacks of these practices. In both case studies, we evaluated our theory using the quality criteria of completeness, variability, structure, comprehension, understandability, applicability, relevance, significance, and usefulness.

We conclude the dissertation by discussing the key results highlighting the value of our contribution to both academia and industry. On one hand, our research publications enrich academic research on open source governance. On the other hand, practitioners can follow the suggested best practices applying the governance handbook we developed. We also discussed the limitations of this dissertation to both theory building and theory evaluation. We then suggested directions for further research that could enrich the topic of corporate open source governance, for example, industry best practices for open source license compliance and its automation, setting up and managing an open source program office, open source component search and selection, and release management.},
	language = {en},
	urldate = {2020-05-24},
	author = {Harutyunyan, Nikolay}
}

@incollection{riehle_open-source_2019,
	address = {Singapore},
	title = {Open-{Source} {License} {Compliance} in {Software} {Supply} {Chains}},
	isbn = {9789811370991},
	url = {https://doi.org/10.1007/978-981-13-7099-1_5},
	abstract = {Almost all software products today include open-source components. However, the obligations that open-source licenses put on their users can be difficult or undesirable to comply with [14, 20, 25]. As a consequence, software vendors and related companies need to govern the process by which open-source components are included in their products [7, 21]. A key process of such open-source governance is license clearance, that is, the process by which a company decides whether a particular component’s license is acceptable for use in its products [4, 15, 19]. In this article, we discuss this process, review the challenges it poses to software vendors, and provide unanswered research questions that result from it.},
	language = {en},
	urldate = {2020-05-24},
	booktitle = {Towards {Engineering} {Free}/{Libre} {Open} {Source} {Software} ({FLOSS}) {Ecosystems} for {Impact} and {Sustainability}: {Communications} of {NII} {Shonan} {Meetings}},
	publisher = {Springer},
	author = {Riehle, Dirk and Harutyunyan, Nikolay},
	editor = {Fitzgerald, Brian and Mockus, Audris and Zhou, Minghui},
	year = {2019},
	doi = {10.1007/978-981-13-7099-1_5},
	pages = {83--95}
}

@inproceedings{harutyunyan_understanding_2018,
	address = {Cham},
	series = {{IFIP} {Advances} in {Information} and {Communication} {Technology}},
	title = {Understanding {Industry} {Requirements} for {FLOSS} {Governance} {Tools}},
	isbn = {9783319923758},
	doi = {10.1007/978-3-319-92375-8_13},
	abstract = {Almost all software products today incorporate free/libre, and open source software (FLOSS) components. Companies must govern their FLOSS use to avoid potential risks to their intellectual property resulting from the use of FLOSS components. A particular challenge is license compliance. To manage the complexity of license compliance, companies should use tools and well-defined processes to perform these tasks time and cost efficiently. This paper investigates and presents common industry requirements for FLOSS governance tools, followed by an evaluation of the suggested requirements by matching them with the features of existing tools.We chose 10 industry leading companies through polar theoretical sampling and interviewed their FLOSS governance experts to derive a theory of industry needs and requirements for tooling. We then analyzed the features of a governance tools sample and used this analysis to evaluate two categories of our theory: FLOSS license scanning and FLOSS in product bills of materials. The result is a list of FLOSS governance requirements based on our qualitative study of the industry, evaluated using the existing governance tool features. For higher practical relevance, we cast our theory as a requirements specification for FLOSS governance tools.},
	language = {en},
	booktitle = {Open {Source} {Systems}: {Enterprise} {Software} and {Solutions}},
	publisher = {Springer International Publishing},
	author = {Harutyunyan, Nikolay and Bauer, Andreas and Riehle, Dirk},
	editor = {Stamelos, Ioannis and Gonzalez-Barahoña, Jesus M. and Varlamis, Iraklis and Anagnostopoulos, Dimosthenis},
	year = {2018},
	keywords = {Company requirements for FLOSS tools , FLOSS governance tools , FLOSS , FOSS , Open source governance , Open source software },
	pages = {151--167}
}